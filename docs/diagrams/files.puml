@startuml
hide circle
skinparam linetype ortho

actor user
participant api
participant "task workers" as tsk
participant "wf workers" as wf
database db <<postgres>>
database artifacts as s3 <<S3>>
queue workflows <<Topic>>
queue tasks <<Topic>>
queue events <<Topic>>

== Upload Artifact (mp3) ==

user -> api: [HTTP] upload song.mp3

activate api
    api -> s3: [S3] store blob
    s3 -> api: [S3] blob stored
    api -> workflows: [MSG] :workflow/create!
    api -> user: [HTTP] 204
deactivate api

workflows -> wf: [MSG] :workflow/create!
wf -> tasks: [MSG] :artifact/create!
tasks -> tsk: [MSG] :artifact/create!

activate tsk
    group tx
        tsk -> db: [SQL] INSERT INTO artifacts
        db -> tsk: [SQL] ResultSet<artifact-id>
    end

    tsk -> workflows: [MSG] :workflow/next!
deactivate tsk

workflows -> wf: [MSG] :workflow/next!
wf -> events: [MSG] :workflow/completed

events -> tsk: [MSG] :workflow/completed

activate tsk
    group tx
        tsk -> db: [SQL] INSERT INTO events
        db -> tsk: [SQL] ResultSet<event-id>
    end
deactivate tsk

events -> api: [MSG] :workflow/completed
api -> user: [WS] workflow completed

== Create File (project track) ==

user -> api: [HTTP] create file

activate api
    api -> workflows: [MSG] :workflow/create!
    api -> user: [HTTP] 204
deactivate api

workflows -> wf: [MSG] :workflow/create!
wf -> tasks: [MSG] :file/create!

tasks -> tsk: [MSG] :file/create!

activate tsk
    group tx
        tsk -> db: [SQL] access? files
        db -> tsk: [SQL] ResultSet<access-ok>
        tsk -> db: [SQL] INSERT INTO files
        db -> tsk: [SQL] ResultSet<file-id>
    end

    tsk -> workflows: [MSG] :workflow/next!
deactivate tsk

workflows -> wf: [MSG] :workflow/next!
wf -> tasks: [MSG] :file-version/create!
tasks -> tsk: [MSG] :file-version/create!

activate tsk
    group tx
        tsk -> db: [SQL] INSERT INTO file_versions
        db -> tsk: [SQL] ResultSet<file-version-id>
    end

    tsk -> workflows: [MSG] :workflow/next!
deactivate tsk

workflows -> wf: [MSG] :workflow/next!
wf -> events: [MSG] :workflow/completed
events -> tsk: [MSG] :workflow/completed

activate tsk
    group tx
        tsk -> db: [SQL] INSERT INTO events
        db -> tsk: [SQL] ResultSet<event-id>
    end
deactivate tsk

events -> api: [MSG] :workflow/completed
api -> user: [WS] workflow completed

@enduml
